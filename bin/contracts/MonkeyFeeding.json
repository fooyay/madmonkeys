{
    "contractName": "MonkeyFeeding",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "monkeyId",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "dna",
                    "type": "uint256"
                }
            ],
            "name": "NewMonkey",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_name",
                    "type": "string"
                }
            ],
            "name": "createRandomMonkey",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_monkeyId",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_targetDna",
                    "type": "uint256"
                }
            ],
            "name": "feedAndMultiply",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "monkeyToOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "monkeys",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "dna",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"monkeyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewMonkey\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomMonkey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_monkeyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetDna\",\"type\":\"uint256\"}],\"name\":\"feedAndMultiply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monkeyToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monkeys\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/coates/Documents/courses/madmonkeys/contracts/MonkeyFeeding.sol\":\"MonkeyFeeding\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/coates/Documents/courses/madmonkeys/contracts/MonkeyFactory.sol\":{\"keccak256\":\"0xed253b29c845d3de5e4070c367f10e402baf802c6a94dd636ebd81c0c96f10a6\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c477539031d8b5d14005dc694effec1d2a1c67213617ff44eb193ffa3b822658\",\"dweb:/ipfs/QmVvSwb2LFKua9yBznUYKa7j4z7XaAzXrT2qCKLsQgeSmn\"]},\"/Users/coates/Documents/courses/madmonkeys/contracts/MonkeyFeeding.sol\":{\"keccak256\":\"0xfaa4e23e8da2850569204c65c5c53d9104661db6d2bc2eeea6779a7fd9357d89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dd8cc377bd4ac498a0aff3a6de3e3e255624923fdb1cdaa645e97c1b59ee8e26\",\"dweb:/ipfs/QmVTFRu2hR9aZvWxyUBg2KtwmoA8s4VuJtjYQf91PCYMRu\"]}},\"version\":1}",
    "bytecode": "60806040526010600081905561001690600a610127565b60015534801561002557600080fd5b5061013a565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561007c5781600019048211156100625761006261002b565b8085161561006f57918102915b93841c9390800290610046565b509250929050565b60008261009357506001610121565b816100a057506000610121565b81600181146100b657600281146100c0576100dc565b6001915050610121565b60ff8411156100d1576100d161002b565b50506001821b610121565b5060208310610133831016604e8410600b84101617156100ff575081810a610121565b6101098383610041565b806000190482111561011d5761011d61002b565b0290505b92915050565b60006101338383610084565b9392505050565b610799806101496000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dedffb814610051578063a6fb702c14610066578063e9e5f32c14610090578063ed0a13ce146100d1575b600080fd5b61006461005f3660046103b2565b6100e4565b005b6100796100743660046103d4565b61018a565b60405161008792919061043d565b60405180910390f35b6100b961009e3660046103d4565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610087565b6100646100df366004610475565b610246565b6000828152600360205260409020546001600160a01b0316331461010757600080fd5b60006002838154811061011c5761011c610526565b906000526020600020906002020190506001548261013a9190610552565b915060006002838360010154610150919061057c565b61015a9190610595565b9050610184604051806040016040528060068152602001654e6f4e616d6560d01b81525082610261565b50505050565b6002818154811061019a57600080fd5b90600052602060002090600202016000915090508060000180546101bd906105a9565b80601f01602080910402602001604051908101604052809291908181526020018280546101e9906105a9565b80156102365780601f1061020b57610100808354040283529160200191610236565b820191906000526020600020905b81548152906001019060200180831161021957829003601f168201915b5050505050908060010154905082565b600061025182610355565b905061025d8282610261565b5050565b6040805180820190915282815260208101829052600280546001810182556000829052825191027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019081906102b79082610632565b50602091909101516001918201556002546000916102d4916106f2565b600081815260036020908152604080832080546001600160a01b0319163390811790915583526004909152812080549293509061031083610705565b91905055507fef8fdeebda61b105f30017ffd88312335d077ca31c4d00d0d709fd8e559f740e8184846040516103489392919061071e565b60405180910390a1505050565b336000908152600460205260408120541561036f57600080fd5b6000826040516020016103829190610747565b6040516020818303038152906040528051906020012060001c9050600154816103ab9190610552565b9392505050565b600080604083850312156103c557600080fd5b50508035926020909101359150565b6000602082840312156103e657600080fd5b5035919050565b60005b838110156104085781810151838201526020016103f0565b50506000910152565b600081518084526104298160208601602086016103ed565b601f01601f19169290920160200192915050565b6040815260006104506040830185610411565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561048757600080fd5b813567ffffffffffffffff8082111561049f57600080fd5b818401915084601f8301126104b357600080fd5b8135818111156104c5576104c561045f565b604051601f8201601f19908116603f011681019083821181831017156104ed576104ed61045f565b8160405282815287602084870101111561050657600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826105615761056161053c565b500690565b634e487b7160e01b600052601160045260246000fd5b8082018082111561058f5761058f610566565b92915050565b6000826105a4576105a461053c565b500490565b600181811c908216806105bd57607f821691505b6020821081036105dd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561062d57600081815260208120601f850160051c8101602086101561060a5750805b601f850160051c820191505b8181101561062957828155600101610616565b5050505b505050565b815167ffffffffffffffff81111561064c5761064c61045f565b6106608161065a84546105a9565b846105e3565b602080601f831160018114610695576000841561067d5750858301515b600019600386901b1c1916600185901b178555610629565b600085815260208120601f198616915b828110156106c4578886015182559484019460019091019084016106a5565b50858210156106e25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561058f5761058f610566565b60006001820161071757610717610566565b5060010190565b8381526060602082015260006107376060830185610411565b9050826040830152949350505050565b600082516107598184602087016103ed565b919091019291505056fea2646970667358221220aea0dccd317de157d3d74db24e1be5694c933e9befddd0481d39d55c82c34bab64736f6c63430008130033",
    "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dedffb814610051578063a6fb702c14610066578063e9e5f32c14610090578063ed0a13ce146100d1575b600080fd5b61006461005f3660046103b2565b6100e4565b005b6100796100743660046103d4565b61018a565b60405161008792919061043d565b60405180910390f35b6100b961009e3660046103d4565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610087565b6100646100df366004610475565b610246565b6000828152600360205260409020546001600160a01b0316331461010757600080fd5b60006002838154811061011c5761011c610526565b906000526020600020906002020190506001548261013a9190610552565b915060006002838360010154610150919061057c565b61015a9190610595565b9050610184604051806040016040528060068152602001654e6f4e616d6560d01b81525082610261565b50505050565b6002818154811061019a57600080fd5b90600052602060002090600202016000915090508060000180546101bd906105a9565b80601f01602080910402602001604051908101604052809291908181526020018280546101e9906105a9565b80156102365780601f1061020b57610100808354040283529160200191610236565b820191906000526020600020905b81548152906001019060200180831161021957829003601f168201915b5050505050908060010154905082565b600061025182610355565b905061025d8282610261565b5050565b6040805180820190915282815260208101829052600280546001810182556000829052825191027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019081906102b79082610632565b50602091909101516001918201556002546000916102d4916106f2565b600081815260036020908152604080832080546001600160a01b0319163390811790915583526004909152812080549293509061031083610705565b91905055507fef8fdeebda61b105f30017ffd88312335d077ca31c4d00d0d709fd8e559f740e8184846040516103489392919061071e565b60405180910390a1505050565b336000908152600460205260408120541561036f57600080fd5b6000826040516020016103829190610747565b6040516020818303038152906040528051906020012060001c9050600154816103ab9190610552565b9392505050565b600080604083850312156103c557600080fd5b50508035926020909101359150565b6000602082840312156103e657600080fd5b5035919050565b60005b838110156104085781810151838201526020016103f0565b50506000910152565b600081518084526104298160208601602086016103ed565b601f01601f19169290920160200192915050565b6040815260006104506040830185610411565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561048757600080fd5b813567ffffffffffffffff8082111561049f57600080fd5b818401915084601f8301126104b357600080fd5b8135818111156104c5576104c561045f565b604051601f8201601f19908116603f011681019083821181831017156104ed576104ed61045f565b8160405282815287602084870101111561050657600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826105615761056161053c565b500690565b634e487b7160e01b600052601160045260246000fd5b8082018082111561058f5761058f610566565b92915050565b6000826105a4576105a461053c565b500490565b600181811c908216806105bd57607f821691505b6020821081036105dd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561062d57600081815260208120601f850160051c8101602086101561060a5750805b601f850160051c820191505b8181101561062957828155600101610616565b5050505b505050565b815167ffffffffffffffff81111561064c5761064c61045f565b6106608161065a84546105a9565b846105e3565b602080601f831160018114610695576000841561067d5750858301515b600019600386901b1c1916600185901b178555610629565b600085815260208120601f198616915b828110156106c4578886015182559484019460019091019084016106a5565b50858210156106e25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561058f5761058f610566565b60006001820161071757610717610566565b5060010190565b8381526060602082015260006107376060830185610411565b9050826040830152949350505050565b600082516107598184602087016103ed565b919091019291505056fea2646970667358221220aea0dccd317de157d3d74db24e1be5694c933e9befddd0481d39d55c82c34bab64736f6c63430008130033",
    "sourceMap": "97:374:1:-:0;;;183:2:0;166:19;;;;209:15;;:2;:15;:::i;:::-;191:33;;97:374:1;;;;;;;;;;;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:2;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:2;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:2;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:2;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;-1:-1:-1;573:806:2;;;;;:::o;1384:131::-;1444:5;1473:36;1500:8;1494:4;1473:36;:::i;:::-;1464:45;1384:131;-1:-1:-1;;;1384:131:2:o;:::-;97:374:1;;;;;;",
    "deployedSourceMap": "97:374:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;143:326;;;;;;:::i;:::-;;:::i;:::-;;296:23:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;326:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;326:46:0;;;;;;-1:-1:-1;;;;;1443:32:2;;;1425:51;;1413:2;1398:18;326:46:0;1279:203:2;942:152:0;;;;;;:::i;:::-;;:::i;143:326:1:-;240:24;;;;:13;:24;;;;;;-1:-1:-1;;;;;240:24:1;226:10;:38;218:47;;;;;;275:23;301:7;309:9;301:18;;;;;;;;:::i;:::-;;;;;;;;;;;275:44;;356:10;;343;:23;;;;:::i;:::-;330:36;;376:11;420:1;406:10;391:8;:12;;;:25;;;;:::i;:::-;390:31;;;;:::i;:::-;376:45;;431:31;;;;;;;;;;;;;;-1:-1:-1;;;431:31:1;;;455:6;431:13;:31::i;:::-;208:261;;143:326;;:::o;296:23:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;942:152::-;1008:12;1023:25;1042:5;1023:18;:25::i;:::-;1008:40;;1058:29;1072:5;1079:7;1058:13;:29::i;:::-;998:96;942:152;:::o;427:273::-;514:19;;;;;;;;;;;;;;;;;;501:7;:33;;;;;;;-1:-1:-1;501:33:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;501:33:0;;;;;;;;;;;554:7;:14;544:7;;554:18;;;:::i;:::-;582:17;;;;:13;:17;;;;;;;;:30;;-1:-1:-1;;;;;;582:30:0;602:10;582:30;;;;;;622:28;;:16;:28;;;;;:30;;544:28;;-1:-1:-1;622:28:0;:30;;;:::i;:::-;;;;;;667:26;677:2;681:5;688:4;667:26;;;;;;;;:::i;:::-;;;;;;;;491:209;427:273;;:::o;706:230::-;817:10;776:4;800:28;;;:16;:28;;;;;;:33;792:42;;;;;;844:9;888:4;871:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;861:33;;;;;;856:39;;844:51;;919:10;;912:4;:17;;;;:::i;:::-;905:24;706:230;-1:-1:-1;;;706:230:0:o;14:248:2:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:2;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:2:o;267:180::-;326:6;379:2;367:9;358:7;354:23;350:32;347:52;;;395:1;392;385:12;347:52;-1:-1:-1;418:23:2;;267:180;-1:-1:-1;267:180:2:o;452:250::-;537:1;547:113;561:6;558:1;555:13;547:113;;;637:11;;;631:18;618:11;;;611:39;583:2;576:10;547:113;;;-1:-1:-1;;694:1:2;676:16;;669:27;452:250::o;707:271::-;749:3;787:5;781:12;814:6;809:3;802:19;830:76;899:6;892:4;887:3;883:14;876:4;869:5;865:16;830:76;:::i;:::-;960:2;939:15;-1:-1:-1;;935:29:2;926:39;;;;967:4;922:50;;707:271;-1:-1:-1;;707:271:2:o;983:291::-;1160:2;1149:9;1142:21;1123:4;1180:45;1221:2;1210:9;1206:18;1198:6;1180:45;:::i;:::-;1172:53;;1261:6;1256:2;1245:9;1241:18;1234:34;983:291;;;;;:::o;1487:127::-;1548:10;1543:3;1539:20;1536:1;1529:31;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:922;1688:6;1741:2;1729:9;1720:7;1716:23;1712:32;1709:52;;;1757:1;1754;1747:12;1709:52;1797:9;1784:23;1826:18;1867:2;1859:6;1856:14;1853:34;;;1883:1;1880;1873:12;1853:34;1921:6;1910:9;1906:22;1896:32;;1966:7;1959:4;1955:2;1951:13;1947:27;1937:55;;1988:1;1985;1978:12;1937:55;2024:2;2011:16;2046:2;2042;2039:10;2036:36;;;2052:18;;:::i;:::-;2127:2;2121:9;2095:2;2181:13;;-1:-1:-1;;2177:22:2;;;2201:2;2173:31;2169:40;2157:53;;;2225:18;;;2245:22;;;2222:46;2219:72;;;2271:18;;:::i;:::-;2311:10;2307:2;2300:22;2346:2;2338:6;2331:18;2386:7;2381:2;2376;2372;2368:11;2364:20;2361:33;2358:53;;;2407:1;2404;2397:12;2358:53;2463:2;2458;2454;2450:11;2445:2;2437:6;2433:15;2420:46;2508:1;2486:15;;;2503:2;2482:24;2475:35;;;;-1:-1:-1;2490:6:2;1619:922;-1:-1:-1;;;;;1619:922:2:o;2546:127::-;2607:10;2602:3;2598:20;2595:1;2588:31;2638:4;2635:1;2628:15;2662:4;2659:1;2652:15;2678:127;2739:10;2734:3;2730:20;2727:1;2720:31;2770:4;2767:1;2760:15;2794:4;2791:1;2784:15;2810:112;2842:1;2868;2858:35;;2873:18;;:::i;:::-;-1:-1:-1;2907:9:2;;2810:112::o;2927:127::-;2988:10;2983:3;2979:20;2976:1;2969:31;3019:4;3016:1;3009:15;3043:4;3040:1;3033:15;3059:125;3124:9;;;3145:10;;;3142:36;;;3158:18;;:::i;:::-;3059:125;;;;:::o;3189:120::-;3229:1;3255;3245:35;;3260:18;;:::i;:::-;-1:-1:-1;3294:9:2;;3189:120::o;3314:380::-;3393:1;3389:12;;;;3436;;;3457:61;;3511:4;3503:6;3499:17;3489:27;;3457:61;3564:2;3556:6;3553:14;3533:18;3530:38;3527:161;;3610:10;3605:3;3601:20;3598:1;3591:31;3645:4;3642:1;3635:15;3673:4;3670:1;3663:15;3527:161;;3314:380;;;:::o;3825:545::-;3927:2;3922:3;3919:11;3916:448;;;3963:1;3988:5;3984:2;3977:17;4033:4;4029:2;4019:19;4103:2;4091:10;4087:19;4084:1;4080:27;4074:4;4070:38;4139:4;4127:10;4124:20;4121:47;;;-1:-1:-1;4162:4:2;4121:47;4217:2;4212:3;4208:12;4205:1;4201:20;4195:4;4191:31;4181:41;;4272:82;4290:2;4283:5;4280:13;4272:82;;;4335:17;;;4316:1;4305:13;4272:82;;;4276:3;;;3916:448;3825:545;;;:::o;4546:1352::-;4672:3;4666:10;4699:18;4691:6;4688:30;4685:56;;;4721:18;;:::i;:::-;4750:97;4840:6;4800:38;4832:4;4826:11;4800:38;:::i;:::-;4794:4;4750:97;:::i;:::-;4902:4;;4966:2;4955:14;;4983:1;4978:663;;;;5685:1;5702:6;5699:89;;;-1:-1:-1;5754:19:2;;;5748:26;5699:89;-1:-1:-1;;4503:1:2;4499:11;;;4495:24;4491:29;4481:40;4527:1;4523:11;;;4478:57;5801:81;;4948:944;;4978:663;3772:1;3765:14;;;3809:4;3796:18;;-1:-1:-1;;5014:20:2;;;5132:236;5146:7;5143:1;5140:14;5132:236;;;5235:19;;;5229:26;5214:42;;5327:27;;;;5295:1;5283:14;;;;5162:19;;5132:236;;;5136:3;5396:6;5387:7;5384:19;5381:201;;;5457:19;;;5451:26;-1:-1:-1;;5540:1:2;5536:14;;;5552:3;5532:24;5528:37;5524:42;5509:58;5494:74;;5381:201;-1:-1:-1;;;;;5628:1:2;5612:14;;;5608:22;5595:36;;-1:-1:-1;4546:1352:2:o;5903:128::-;5970:9;;;5991:11;;;5988:37;;;6005:18;;:::i;6036:135::-;6075:3;6096:17;;;6093:43;;6116:18;;:::i;:::-;-1:-1:-1;6163:1:2;6152:13;;6036:135::o;6176:362::-;6381:6;6370:9;6363:25;6424:2;6419;6408:9;6404:18;6397:30;6344:4;6444:45;6485:2;6474:9;6470:18;6462:6;6444:45;:::i;:::-;6436:53;;6525:6;6520:2;6509:9;6505:18;6498:34;6176:362;;;;;;:::o;6543:289::-;6674:3;6712:6;6706:13;6728:66;6787:6;6782:3;6775:4;6767:6;6763:17;6728:66;:::i;:::-;6810:16;;;;;6543:289;-1:-1:-1;;6543:289:2:o",
    "sourcePath": "/Users/coates/Documents/courses/madmonkeys/contracts/MonkeyFeeding.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.19+commit.7dd6d404"
    },
    "ast": {
        "absolutePath": "/Users/coates/Documents/courses/madmonkeys/contracts/MonkeyFeeding.sol",
        "exportedSymbols": {
            "MonkeyFactory": [
                128
            ],
            "MonkeyFeeding": [
                179
            ]
        },
        "id": 180,
        "license": "UNLICENSED",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 130,
                "literals": [
                    "solidity",
                    ">=",
                    "0.8",
                    ".18"
                ],
                "nodeType": "PragmaDirective",
                "src": "39:25:1"
            },
            {
                "absolutePath": "/Users/coates/Documents/courses/madmonkeys/contracts/MonkeyFactory.sol",
                "file": "./MonkeyFactory.sol",
                "id": 131,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 180,
                "sourceUnit": 129,
                "src": "66:29:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 132,
                            "name": "MonkeyFactory",
                            "nameLocations": [
                                "123:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 128,
                            "src": "123:13:1"
                        },
                        "id": 133,
                        "nodeType": "InheritanceSpecifier",
                        "src": "123:13:1"
                    }
                ],
                "canonicalName": "MonkeyFeeding",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 179,
                "linearizedBaseContracts": [
                    179,
                    128
                ],
                "name": "MonkeyFeeding",
                "nameLocation": "106:13:1",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 177,
                            "nodeType": "Block",
                            "src": "208:261:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 146,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 141,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "226:3:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 142,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "230:6:1",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "226:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "baseExpression": {
                                                        "id": 143,
                                                        "name": "monkeyToOwner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 30,
                                                        "src": "240:13:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                                            "typeString": "mapping(uint256 => address)"
                                                        }
                                                    },
                                                    "id": 145,
                                                    "indexExpression": {
                                                        "id": 144,
                                                        "name": "_monkeyId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 135,
                                                        "src": "254:9:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "240:24:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "226:38:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 140,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "218:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 147,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "218:47:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 148,
                                    "nodeType": "ExpressionStatement",
                                    "src": "218:47:1"
                                },
                                {
                                    "assignments": [
                                        151
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 151,
                                            "mutability": "mutable",
                                            "name": "myMonkey",
                                            "nameLocation": "290:8:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 177,
                                            "src": "275:23:1",
                                            "stateVariable": false,
                                            "storageLocation": "storage",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Monkey_$22_storage_ptr",
                                                "typeString": "struct MonkeyFactory.Monkey"
                                            },
                                            "typeName": {
                                                "id": 150,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 149,
                                                    "name": "Monkey",
                                                    "nameLocations": [
                                                        "275:6:1"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 22,
                                                    "src": "275:6:1"
                                                },
                                                "referencedDeclaration": 22,
                                                "src": "275:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Monkey_$22_storage_ptr",
                                                    "typeString": "struct MonkeyFactory.Monkey"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 155,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 152,
                                            "name": "monkeys",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 26,
                                            "src": "301:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Monkey_$22_storage_$dyn_storage",
                                                "typeString": "struct MonkeyFactory.Monkey storage ref[] storage ref"
                                            }
                                        },
                                        "id": 154,
                                        "indexExpression": {
                                            "id": 153,
                                            "name": "_monkeyId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 135,
                                            "src": "309:9:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "301:18:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Monkey_$22_storage",
                                            "typeString": "struct MonkeyFactory.Monkey storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "275:44:1"
                                },
                                {
                                    "expression": {
                                        "id": 160,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 156,
                                            "name": "_targetDna",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 137,
                                            "src": "330:10:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 159,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 157,
                                                "name": "_targetDna",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 137,
                                                "src": "343:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "%",
                                            "rightExpression": {
                                                "id": 158,
                                                "name": "dnaModulus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 17,
                                                "src": "356:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "343:23:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "330:36:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 161,
                                    "nodeType": "ExpressionStatement",
                                    "src": "330:36:1"
                                },
                                {
                                    "assignments": [
                                        163
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 163,
                                            "mutability": "mutable",
                                            "name": "newDna",
                                            "nameLocation": "381:6:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 177,
                                            "src": "376:11:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 162,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "376:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 171,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 170,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "components": [
                                                {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 167,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 164,
                                                            "name": "myMonkey",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 151,
                                                            "src": "391:8:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Monkey_$22_storage_ptr",
                                                                "typeString": "struct MonkeyFactory.Monkey storage pointer"
                                                            }
                                                        },
                                                        "id": 165,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "400:3:1",
                                                        "memberName": "dna",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 21,
                                                        "src": "391:12:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 166,
                                                        "name": "_targetDna",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 137,
                                                        "src": "406:10:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "391:25:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "id": 168,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "390:27:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "hexValue": "32",
                                            "id": 169,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "420:1:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                        },
                                        "src": "390:31:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "376:45:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4e6f4e616d65",
                                                "id": 173,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "445:8:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0aeb8da9f74598c2e4a71ce60a50afb61c4d6634980349338a64c5e84606a0bd",
                                                    "typeString": "literal_string \"NoName\""
                                                },
                                                "value": "NoName"
                                            },
                                            {
                                                "id": 174,
                                                "name": "newDna",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 163,
                                                "src": "455:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_0aeb8da9f74598c2e4a71ce60a50afb61c4d6634980349338a64c5e84606a0bd",
                                                    "typeString": "literal_string \"NoName\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 172,
                                            "name": "_createMonkey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77,
                                            "src": "431:13:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (string memory,uint256)"
                                            }
                                        },
                                        "id": 175,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "431:31:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 176,
                                    "nodeType": "ExpressionStatement",
                                    "src": "431:31:1"
                                }
                            ]
                        },
                        "functionSelector": "0dedffb8",
                        "id": 178,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "feedAndMultiply",
                        "nameLocation": "152:15:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 138,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 135,
                                    "mutability": "mutable",
                                    "name": "_monkeyId",
                                    "nameLocation": "173:9:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 178,
                                    "src": "168:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 134,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "168:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 137,
                                    "mutability": "mutable",
                                    "name": "_targetDna",
                                    "nameLocation": "189:10:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 178,
                                    "src": "184:15:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 136,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "184:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "167:33:1"
                        },
                        "returnParameters": {
                            "id": 139,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "208:0:1"
                        },
                        "scope": 179,
                        "src": "143:326:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 180,
                "src": "97:374:1",
                "usedErrors": []
            }
        ],
        "src": "39:432:1"
    },
    "functionHashes": {
        "createRandomMonkey(string)": "ed0a13ce",
        "feedAndMultiply(uint256,uint256)": "0dedffb8",
        "monkeyToOwner(uint256)": "e9e5f32c",
        "monkeys(uint256)": "a6fb702c"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "389000",
            "executionCost": "44975",
            "totalCost": "433975"
        },
        "external": {
            "createRandomMonkey(string)": "infinite",
            "feedAndMultiply(uint256,uint256)": "infinite",
            "monkeyToOwner(uint256)": "2499",
            "monkeys(uint256)": "infinite"
        }
    }
}